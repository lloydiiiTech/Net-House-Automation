<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width initial-scale=1.0">
    <title>NetHouseAutomation Reports & Analytics</title>
    <!-- GLOBAL MAINLY STYLES-->
    <link href="./assets/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="./assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="./assets/vendors/themify-icons/css/themify-icons.css" rel="stylesheet" />
    <!-- PLUGINS STYLES-->
    <link href="./assets/vendors/datatables/datatables.min.css" rel="stylesheet" />
    <link href="./assets/vendors/jvectormap/jquery-jvectormap-2.0.3.css" rel="stylesheet" />
    <!-- THEME STYLES-->
    <link href="assets/css/main.min.css" rel="stylesheet" />
    <!-- PAGE LEVEL STYLES-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="./assets/vendors/fullcalendar/dist/fullcalendar.min.css" rel="stylesheet" />
    <link href="./assets/vendors/fullcalendar/dist/fullcalendar.print.min.css" rel="stylesheet" media="print" />
    <style>
        :root {
            --primary-color: #2c3e50;
            --accent-color: #5b9bd5;
            --success-color: #27ae60;
            --danger-color: #e74c3c;
            --light-bg: #f8f9fa;
            --border-radius: 16px;
            --box-shadow: 0 8px 36px rgba(44,62,80,0.13), 0 2px 8px rgba(44,62,80,0.06);
            --header-gradient: linear-gradient(90deg, #5b9bd5 0%, #b3c6e2 100%);
        }
        html, body {
            min-height: 100vh;
            background: linear-gradient(135deg, #f8fafc 0%, #eaf0f7 100%);
            font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
        }
        .page-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 1.2rem;
            padding-bottom: 0.7rem;
            border-bottom: 2px solid var(--accent-color);
            font-size: 2.2rem;
            letter-spacing: 0.01em;
            display: flex;
            align-items: center;
            gap: 0.7rem;
        }
        .page-title i {
            color: var(--accent-color);
            font-size: 2.1rem;
        }
        .summary-bar {
            display: flex;
            gap: 2rem;
            align-items: center;
            background: var(--header-gradient);
            color: #fff;
            border-radius: var(--border-radius);
            padding: 1.1rem 2rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--box-shadow);
            font-size: 1.13rem;
            flex-wrap: wrap;
        }
        .summary-bar .summary-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }
        .summary-bar .badge {
            font-size: 1.08rem;
            padding: 0.5rem 1.1rem;
            border-radius: 12px;
            font-weight: 600;
            background: #fff;
            color: var(--accent-color);
            box-shadow: 0 1px 4px rgba(44,62,80,0.08);
        }
        .main-card {
            max-width: 1100px;
            width: 100%;
            margin: 0 auto 2.2rem auto;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            background: #fff;
            border: 1.5px solid #e3eefd;
            overflow: hidden;
            transition: box-shadow 0.18s, border-color 0.18s, background 0.18s;
            backdrop-filter: blur(1.5px);
        }
        .main-card:hover {
            box-shadow: 0 16px 48px rgba(44,62,80,0.18), 0 4px 16px rgba(44,62,80,0.10);
            border-color: #b3c6e2;
            background: rgba(255,255,255,0.99);
        }
        .filter-section {
            background: #fafdff;
            border-radius: 18px;
            box-shadow: 0 2px 8px rgba(44,62,80,0.04);
            padding: 1.5rem 1.5rem 1.1rem 1.5rem;
            margin-bottom: 1.5rem;
            border: 1.5px solid #e3eefd;
        }
            .section-label {
            font-size: 1.08rem;
            color: #7a8ca3;
            font-weight: 600;
            letter-spacing: 0.01em;
            display: flex;
            align-items: center;
            gap: 0.4rem;
            margin-bottom: 0.7rem;
            text-transform: uppercase;
        }
        .custom-input-lg {
            border-radius: 12px;
            border: 1.5px solid #cfd8dc;
            padding: 0.9rem 1.1rem;
            font-size: 1.08rem;
            background: #f9fafb;
            box-shadow: 0 1px 2px rgba(44,62,80,0.03);
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        .custom-input-lg:focus {
            border-color: #5b9bd5;
            background: #fff;
            box-shadow: 0 0 0 3px #e3eefd;
        }
        .custom-table {
            border-radius: 18px;
            overflow: hidden;
            border-collapse: separate;
            border-spacing: 0;
            background: #fff;
            box-shadow: 0 2px 12px rgba(44,62,80,0.06);
        }
        .custom-table thead th {
            background: #e3eefd;
            color: #2c3e50;
            font-weight: 700;
            border-bottom: 2px solid #b3c6e2;
            padding: 1.1rem 0.75rem;
            text-align: center;
            font-size: 1.08rem;
            position: sticky;
            top: 0;
            z-index: 2;
            cursor: pointer;
            user-select: none;
            transition: background 0.18s;
        }
        .custom-table thead th.sortable:hover {
            background: #d6e6fa;
            color: var(--accent-color);
        }
        .custom-table thead th .sort-arrows {
            font-size: 1.1em;
            margin-left: 0.3em;
            color: #b3c6e2;
            font-weight: 400;
            letter-spacing: 0.1em;
        }
        .custom-table thead th.sorted-asc .sort-arrows {
            color: var(--accent-color);
            font-weight: 700;
        }
        .custom-table thead th.sorted-desc .sort-arrows {
            color: var(--accent-color);
            font-weight: 700;
        }
        .custom-table tbody td {
            padding: 1.05rem 0.75rem;
            border-bottom: 1px solid #f2f6fa;
            vertical-align: middle;
            text-align: center;
            background: #fff;
            transition: background 0.18s;
            font-size: 1.07rem;
        }
        .custom-table tbody tr:nth-child(even) td {
            background: #f7fafd;
        }
        .custom-table tbody tr:hover td {
            background: #e3eefd;
        }
        .custom-table td .badge {
            font-size: 1em;
            padding: 0.4em 0.9em;
            border-radius: 10px;
            font-weight: 600;
            background: #e3eefd;
            color: var(--accent-color);
        }
        .custom-table td .badge.not-planted {
            background: #fbeee6;
            color: #b26a00;
        }
        .custom-table td .badge.planted {
            background: #eaffea;
            color: #27ae60;
        }
        .alert {
            margin-top: 2rem;
        }
        @media (max-width: 900px) {
            .main-card, .summary-bar {
                max-width: 100%;
                padding: 1.2rem 0.7rem;
            }
            .custom-table thead th, .custom-table tbody td {
                padding: 0.7rem 0.3rem;
                font-size: 0.97rem;
            }
            .summary-bar {
                flex-direction: column;
                gap: 0.7rem;
                padding: 1rem 0.7rem;
            }
        }
        .btn.btn-sm {
            padding: 0.35rem 0.7rem;
            font-size: 1.01rem;
            border-radius: 8px;
            transition: background 0.18s, color 0.18s, box-shadow 0.18s, border-color 0.18s;
            box-shadow: 0 1px 4px rgba(44,62,80,0.04);
            margin-right: 0.2rem;
        }
        .btn-outline-primary {
            border-color: #5b9bd5;
            color: #5b9bd5;
            background: #fff;
        }
        .btn-outline-primary:hover, .btn-outline-primary:focus {
            background: #e3eefd;
            color: #4178b8;
            border-color: #4178b8;
        }
        .btn-outline-danger {
            border-color: #e57373;
            color: #e57373;
            background: #fff;
        }
        .btn-outline-danger:hover, .btn-outline-danger:focus {
            background: #fbeee6;
            color: #c0392b;
            border-color: #c0392b;
        }
        .btn-outline-info {
            border-color: #17a2b8;
            color: #17a2b8;
            background: #fff;
        }
        .btn-outline-info:hover, .btn-outline-info:focus {
            background: #e3f2fd;
            color: #0d6efd;
            border-color: #0d6efd;
        }
        .crop-details-modal .modal-content {
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            border: 1.5px solid #e3eefd;
        }
        .crop-details-modal .modal-header {
            background: var(--header-gradient);
            color: #fff;
            border-bottom: none;
            border-top-left-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
        }
        .crop-details-modal .modal-title {
            font-weight: 600;
            font-size: 1.3rem;
        }
        .crop-details-modal .modal-body {
            padding: 2rem;
        }
        .detail-section {
            margin-bottom: 1.5rem;
        }
        .detail-section h6 {
            color: var(--primary-color);
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #e3eefd;
            font-size: 1.1rem;
        }
        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }
        .detail-item {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 12px;
            border: 1px solid #e3eefd;
        }
        .detail-item .label {
            font-size: 0.9rem;
            color: #6c757d;
            font-weight: 500;
            margin-bottom: 0.3rem;
        }
        .detail-item .value {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--primary-color);
        }
        .detail-item .unit {
            font-size: 0.8rem;
            color: #6c757d;
            margin-left: 0.3rem;
        }
    </style>
</head>
<body class="fixed-navbar">
    <div class="page-wrapper">
        <!-- START HEADER-->
        <header class="header">
            <div class="page-brand">
                <a class="link" href="/dashboard">
                    <span class="brand">Demo
                        <span class="brand-tip">FARM</span>
                    </span>
                    <span class="brand-mini">DF</span>
                </a>
            </div>
            <div class="flexbox flex-1">
                <!-- START TOP-LEFT TOOLBAR-->
                <ul class="nav navbar-toolbar">
                    <li>
                        <a class="nav-link sidebar-toggler js-sidebar-toggler"><i class="ti-menu"></i></a>
                    </li>
                </ul>
                <!-- END TOP-LEFT TOOLBAR-->
                <!-- START TOP-RIGHT TOOLBAR-->
                <ul class="nav navbar-toolbar">
                    <li>
                        <a class="nav-link" href="#" id="pendingUsersBtn">
                            <i class="fa fa-user-clock"></i>
                            <span class="badge badge-danger" id="pendingUsersCount" style="display: none;">0</span>
                        </a>
                    </li>
                    <li class="dropdown dropdown-user">
                        <a class="nav-link dropdown-toggle link" data-toggle="dropdown">
                            <img src="<%= user.profilePicture %>" />
                            <span></span><%= user.name %><i class="fa fa-angle-down m-l-5"></i></a>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="/profile"><i class="fa fa-user"></i>Profile</a>
                            <li class="dropdown-divider"></li>
                            <a class="dropdown-item" href="/logout"><i class="fa fa-power-off"></i>Logout</a>
                        </ul>
                    </li>
                </ul>
                <!-- END TOP-RIGHT TOOLBAR-->
            </div>
        </header>
        <!-- END HEADER-->
        <!-- START SIDEBAR-->
        <nav class="page-sidebar" id="sidebar">
            <div id="sidebar-collapse">
                <div class="admin-block d-flex">
                    <div>
                        <img src="<%= user.profilePicture %>" width="45px" />
                    </div>
                    <div class="admin-info">
                        <div class="font-strong"><%= user.name %></div><small><%= user.role %></small></div>
                </div>
                <ul class="side-menu metismenu">
                    <li>
                        <a href="/dashboard"><i class="sidebar-item-icon fas fa-tachometer-alt"></i>
                            <span class="nav-label">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/plant-overview"><i class="sidebar-item-icon fas fa-leaf"></i>
                            <span class="nav-label">Plant Overview</span>
                        </a>
                    </li>
                    <li>
                        <a href="/irrigation-controll"><i class="sidebar-item-icon fas fa-faucet"></i>
                            <span class="nav-label">Irrigation Control</span>
                        </a>
                    </li>
                    <li>
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="sidebar-item-icon fas fa-chart-bar"></i>
                            <span class="nav-label">Reports & Analytics</span>
                            <i class="fa fa-caret-down ml-1"></i>
                        </a>
                        <ul class="dropdown-menu" style="background: #fff; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
                            <li><a class="dropdown-item" href="/report-crops">Crops Report</a></li>
                            <li><a class="dropdown-item" href="/report-daily-sensors">Daily Sensors Data</a></li>
                            <li><a class="dropdown-item" href="/report-irrigation">Irrigation Records</a></li>
                            <li><a class="dropdown-item" href="/report-planted-crops">Planted Crops</a></li>
                            <li><a class="dropdown-item" href="/report-prediction-history">Prediction History</a></li>
                            <li><a class="dropdown-item" href="/report-ai-fertilizer">AI Fertilizer</a></li>
                            <li><a class="dropdown-item" href="/report-ai-disease">AI Disease</a></li>
                        </ul>
                    </li>
                    <li>
                        <a href="/user-management"><i class="sidebar-item-icon fas fa-users-cog"></i>
                            <span class="nav-label">User Management</span>
                        </a>
                    </li>
                    <li>
                        <a class="active" href="/crop-recommendations"><i class="sidebar-item-icon fas fa-seedling"></i>
                            <span class="nav-label">Crop Recommendations</span>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <div class="content-wrapper">
            <div class="page-content fade-in-up">
                <div class="row">
                    <div class="col-12">
                        <h1 class="page-title"><i class="fa fa-leaf"></i> Registered Crops Report</h1>
                        <div class="summary-bar mb-4">
                            <div class="summary-item"><i class="fa fa-seedling"></i> Total Crops: <span class="badge"><%= cropSummary.length %></span></div>
                            <div class="summary-item"><i class="fa fa-check-circle"></i> Planted: <span class="badge planted"><%= cropSummary.filter(c=>c.numberPlanted>0).length %></span></div>
                            <div class="summary-item"><i class="fa fa-times-circle"></i> Never Planted: <span class="badge not-planted"><%= cropSummary.filter(c=>!c.lastPlanted).length %></span></div>
                        </div>
                        <!-- Filter Card -->
                        <div class="filter-section mb-4">
                            <div class="section-label mb-3"><i class="fa fa-filter me-2"></i> <span>Search</span></div>
                            <div class="row g-3 align-items-end">
                                <div class="col-12">
                                    <label for="searchCropName" class="form-label mb-1">Search Crop Name</label>
                                    <input type="text" class="form-control custom-input-lg" id="searchCropName" placeholder="Type to search...">
                                </div>
                            </div>
                        </div>
                        <!-- End Filter Card -->
                        <div class="main-card premium-table-card mb-5">
                            <div class="card-header bg-primary text-white d-flex align-items-center" style="border-top-left-radius: 0.5rem; border-top-right-radius: 0.5rem;">
                                <i class="fa fa-leaf fa-lg me-2"></i>
                                <h3 class="mb-0 flex-grow-1">Registered Crops</h3>
                                <span class="badge bg-light text-primary ms-2">Total: <%= cropSummary.length %></span>
                                <button class="btn btn-light btn-sm ms-auto" onclick="openRegisterModal()">
                                    <i class="fa fa-plus me-1"></i>Register New Crop
                                </button>
                            </div>
                            <div class="card-body p-0">
                                <div class="table-responsive">
                                    <table class="table table-hover table-striped align-middle mb-0 custom-table" id="registeredCropsTable">
                                        <thead class="table-primary">
                                            <tr>
                                                <th class="sortable" data-col="name">Crop Name <span class="sort-arrows">▲▼</span></th>
                                                <th class="sortable" data-col="successRate">Success Rate (%) <span class="sort-arrows">▲▼</span></th>
                                                <th class="sortable" data-col="numberPlanted">Number Planted <span class="sort-arrows">▲▼</span></th>
                                                <th class="sortable" data-col="numberFailed">Number Failed <span class="sort-arrows">▲▼</span></th>
                                                <th class="sortable" data-col="lastPlanted">Last Planted <span class="sort-arrows">▲▼</span></th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% let filteredCrops = cropSummary; %>
                                            <% if (filteredCrops && filteredCrops.length > 0) { %>
                                                <% filteredCrops.forEach(function(crop) { %>
                                                    <tr>
                                                        <td><%= crop.name %></td>
                                                        <td><%= crop.successRate %></td>
                                                        <td><%= crop.numberPlanted %></td>
                                                        <td><%= crop.numberFailed %></td>
                                                        <td>
                                                            <% if (crop.lastPlanted) { %>
                                                                <span class="badge planted"><%= new Date(crop.lastPlanted).toLocaleDateString() %></span>
                                                            <% } else { %>
                                                                <span class="badge not-planted">Not yet planted</span>
                                                            <% } %>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-sm btn-outline-info me-1" title="View Details" onclick="viewCropDetails('<%= encodeURIComponent(crop.name) %>')"><i class="fa fa-eye"></i></button>
                                                            <button class="btn btn-sm btn-outline-primary me-1" title="Edit" onclick="openEditModal('<%= encodeURIComponent(crop.name) %>', this)"><i class="fa fa-edit"></i></button>
                                                            <button class="btn btn-sm btn-outline-danger" title="Delete" onclick="deleteCrop('<%= encodeURIComponent(crop.name) %>')"><i class="fa fa-trash"></i></button>
                                                        </td>
                                                    </tr>
                                                <% }); %>
                                            <% } else { %>
                                                <tr><td colspan="6" class="text-center">No registered crops found.</td></tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <footer class="page-footer">
                <div class="font-13">2025 © <b>NetHouseAutomation</b> - All rights reserved.</div>
                <div class="to-top"><i class="fa fa-angle-double-up"></i></div>
            </footer>
        </div>
    </div>
    <!-- Edit Crop Name Modal -->
    <div class="modal fade" id="editCropModal" tabindex="-1" role="dialog" aria-labelledby="editCropModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editCropModalLabel">Edit Crop Data</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <form id="editCropForm" autocomplete="off">
            <div class="modal-body">
              <div class="form-group">
                <label for="editCropNameInput">Crop Name</label>
                <input type="text" class="form-control" id="editCropNameInput" name="newCropName" required>
                <input type="hidden" id="oldCropNameInput" name="oldCropName">
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="editOptimalTemperature">Optimal Temperature (°C)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalTemperature" name="optimal_temperature">
                </div>
                <div class="form-group col-md-6">
                  <label for="editOptimalHumidity">Optimal Humidity (%)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalHumidity" name="optimal_humidity">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="editOptimalMoisture">Optimal Moisture (%)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalMoisture" name="optimal_moisture">
                </div>
                <div class="form-group col-md-6">
                  <label for="editOptimalLight">Optimal Light (lux)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalLight" name="optimal_light">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="editOptimalPH">Optimal pH</label>
                  <input type="number" step="any" class="form-control" id="editOptimalPH" name="optimal_ph">
                </div>
                <div class="form-group col-md-6">
                  <label for="editOptimalN">Nitrogen (N) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalN" name="optimal_n">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="editOptimalP">Phosphorus (P) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalP" name="optimal_p">
                </div>
                <div class="form-group col-md-6">
                  <label for="editOptimalK">Potassium (K) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="editOptimalK" name="optimal_k">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-primary">Save Changes</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- Crop Details Modal -->
    <div class="modal fade crop-details-modal" id="cropDetailsModal" tabindex="-1" role="dialog" aria-labelledby="cropDetailsModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cropDetailsModalLabel">
              <i class="fa fa-leaf me-2"></i>
              <span id="cropDetailsTitle">Crop Details</span>
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div id="cropDetailsContent">
              <!-- Content will be loaded dynamically -->
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Register New Crop Modal -->
    <div class="modal fade" id="registerCropModal" tabindex="-1" role="dialog" aria-labelledby="registerCropModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="registerCropModalLabel">
              <i class="fa fa-plus me-2"></i>Register New Crop
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <form id="registerCropForm" autocomplete="off">
            <div class="modal-body">
              <div class="form-group mb-3">
                <label for="registerCropName">Crop Name *</label>
                <input type="text" class="form-control" id="registerCropName" name="cropName" required>
                <small class="form-text text-muted">Enter the name of the crop you want to register</small>
              </div>
              
              <div class="alert alert-info">
                <i class="fa fa-info-circle me-2"></i>
                <strong>Optimal Conditions:</strong> You can either fill in the optimal conditions manually or leave them blank to use AI-generated recommendations.
              </div>

              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="registerOptimalTemperature">Optimal Temperature (°C)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalTemperature" name="optimal_temperature" placeholder="Leave blank for AI recommendation">
                </div>
                <div class="form-group col-md-6">
                  <label for="registerOptimalHumidity">Optimal Humidity (%)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalHumidity" name="optimal_humidity" placeholder="Leave blank for AI recommendation">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="registerOptimalMoisture">Optimal Moisture (%)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalMoisture" name="optimal_moisture" placeholder="Leave blank for AI recommendation">
                </div>
                <div class="form-group col-md-6">
                  <label for="registerOptimalLight">Optimal Light (lux)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalLight" name="optimal_light" placeholder="Leave blank for AI recommendation">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="registerOptimalPH">Optimal pH</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalPH" name="optimal_ph" placeholder="Leave blank for AI recommendation">
                </div>
                <div class="form-group col-md-6">
                  <label for="registerOptimalN">Nitrogen (N) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalN" name="optimal_n" placeholder="Leave blank for AI recommendation">
                </div>
              </div>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="registerOptimalP">Phosphorus (P) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalP" name="optimal_p" placeholder="Leave blank for AI recommendation">
                </div>
                <div class="form-group col-md-6">
                  <label for="registerOptimalK">Potassium (K) (mg/kg)</label>
                  <input type="number" step="any" class="form-control" id="registerOptimalK" name="optimal_k" placeholder="Leave blank for AI recommendation">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              <button type="submit" class="btn btn-primary">
                <i class="fa fa-plus me-1"></i>Register Crop
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
    <!-- Notification Container -->
    <div id="notification-container" style="position: fixed; top: 30px; right: 30px; z-index: 9999; min-width: 300px;"></div>
    <script src="/assets/vendors/jquery/dist/jquery.min.js"></script>
    <script src="/assets/vendors/popper.js/dist/umd/popper.min.js"></script>
    <script src="/assets/vendors/bootstrap/dist/js/bootstrap.min.js"></script>
    <script>
    // Global functions for crop details modal
    function viewCropDetails(cropName) {
        const decodedName = decodeURIComponent(cropName);
        
        // Show loading state
        document.getElementById('cropDetailsTitle').textContent = 'Loading...';
        document.getElementById('cropDetailsContent').innerHTML = '<div class="text-center"><i class="fa fa-spinner fa-spin fa-2x"></i><p class="mt-2">Loading crop details...</p></div>';
        $('#cropDetailsModal').modal('show');
        
        // Fetch crop details
        fetch('/get-crop-details', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify({ cropName: decodedName })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                displayCropDetails(data.cropDetails);
            } else {
                document.getElementById('cropDetailsContent').innerHTML = 
                    '<div class="alert alert-danger"><i class="fa fa-exclamation-triangle"></i> Failed to load crop details: ' + (data.message || 'Unknown error') + '</div>';
            }
        })
        .catch(err => {
            document.getElementById('cropDetailsContent').innerHTML = 
                '<div class="alert alert-danger"><i class="fa fa-exclamation-triangle"></i> Error: ' + err.message + '</div>';
        });
    }

    function displayCropDetails(crop) {
        // Update modal title
        document.getElementById('cropDetailsTitle').textContent = crop.name;
        
        // Format dates
        const formatDate = (timestamp) => {
            if (!timestamp) return 'Not available';
            const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);
            return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
        };
        
        // Create the content HTML
        const content = `
            <div class="detail-section">
                <h6><i class="fa fa-chart-line me-2"></i>Performance Statistics</h6>
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="label">Success Rate</div>
                        <div class="value">${crop.successRate}%</div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Number Planted</div>
                        <div class="value">${crop.numberPlanted}</div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Number Failed</div>
                        <div class="value">${crop.numberFailed}</div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Last Planted</div>
                        <div class="value">${formatDate(crop.lastPlanted)}</div>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h6><i class="fa fa-thermometer-half me-2"></i>Environmental Conditions</h6>
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="label">Optimal Temperature</div>
                        <div class="value">${crop.optimal_temperature}<span class="unit">°C</span></div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Optimal Humidity</div>
                        <div class="value">${crop.optimal_humidity}<span class="unit">%</span></div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Optimal Moisture</div>
                        <div class="value">${crop.optimal_moisture}<span class="unit">%</span></div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Optimal Light</div>
                        <div class="value">${crop.optimal_light}<span class="unit">lux</span></div>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h6><i class="fa fa-flask me-2"></i>Soil & Nutrient Requirements</h6>
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="label">Optimal pH</div>
                        <div class="value">${crop.optimal_ph}</div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Nitrogen (N)</div>
                        <div class="value">${crop.optimal_n}<span class="unit">mg/kg</span></div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Phosphorus (P)</div>
                        <div class="value">${crop.optimal_p}<span class="unit">mg/kg</span></div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Potassium (K)</div>
                        <div class="value">${crop.optimal_k}<span class="unit">mg/kg</span></div>
                    </div>
                </div>
            </div>
            
            <div class="detail-section">
                <h6><i class="fa fa-robot me-2"></i>AI Prediction Data</h6>
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="label">Last Prediction Score</div>
                        <div class="value">${crop.lastPredictionScore}%</div>
                    </div>
                    <div class="detail-item">
                        <div class="label">Last Prediction Time</div>
                        <div class="value">${formatDate(crop.lastPredictionTime)}</div>
                    </div>
                </div>
            </div>
        `;
        
        document.getElementById('cropDetailsContent').innerHTML = content;
    }

    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchCropName');
        const table = document.getElementById('registeredCropsTable');
        const tbody = table.getElementsByTagName('tbody')[0];
        let rows = Array.from(tbody.getElementsByTagName('tr'));

        // Real-time search
        searchInput.addEventListener('input', function() {
            const filter = searchInput.value.toLowerCase();
            rows.forEach(row => {
                const cropNameCell = row.getElementsByTagName('td')[0];
                if (cropNameCell) {
                    const txtValue = cropNameCell.textContent || cropNameCell.innerText;
                    row.style.display = txtValue.toLowerCase().indexOf(filter) > -1 ? '' : 'none';
                }
            });
        });

        // Sorting
        let currentSort = { col: null, dir: 1 };
        const getCellValue = (row, idx) => {
            let val = row.children[idx].textContent.trim();
            if (idx === 1 || idx === 2 || idx === 3) return parseFloat(val) || 0;
            if (idx === 4) return val === 'Not yet planted' ? 0 : new Date(val).getTime();
            return val.toLowerCase();
        };
        function sortTable(colIdx, colName) {
            let dir = 1;
            if (currentSort.col === colIdx) dir = -currentSort.dir;
            currentSort = { col: colIdx, dir };
            rows.sort((a, b) => {
                let vA = getCellValue(a, colIdx);
                let vB = getCellValue(b, colIdx);
                if (vA < vB) return -1 * dir;
                if (vA > vB) return 1 * dir;
                return 0;
            });
            // Remove all rows and re-append in sorted order
            rows.forEach(row => tbody.appendChild(row));
            // Update sort arrows
            document.querySelectorAll('.sortable .sort-arrows').forEach(el => el.textContent = '▲▼');
            document.querySelectorAll('.sortable').forEach(th => th.classList.remove('sorted-asc', 'sorted-desc'));
            const arrow = dir === 1 ? '▲' : '▼';
            const th = document.querySelectorAll('.sortable')[colIdx];
            th.querySelector('.sort-arrows').textContent = arrow;
            th.classList.add(dir === 1 ? 'sorted-asc' : 'sorted-desc');
        }
        document.querySelectorAll('.sortable').forEach((th, idx) => {
            th.style.cursor = 'pointer';
            th.addEventListener('click', () => sortTable(idx, th.dataset.col));
        });
    });

    function deleteCrop(cropName) {
        if (confirm('Are you sure you want to unregister this crop?')) {
            fetch('/unregister-crop', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                },
                body: JSON.stringify({ cropName: decodeURIComponent(cropName) })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    // Option 1: Remove the row from the table
                    const row = document.querySelector(`button[onclick=\"deleteCrop('${cropName}')\"]`).closest('tr');
                    if (row) row.remove();
                    showNotification('Crop unregistered successfully.', 'success');
                } else {
                    showNotification('Failed to unregister crop: ' + (data.message || 'Unknown error'), 'danger');
                }
            })
            .catch(err => {
                showNotification('Error: ' + err.message, 'danger');
            });
        }
    }

    function openEditModal(cropName, btn) {
        const decodedName = decodeURIComponent(cropName);
        // Show loading state in modal
        document.getElementById('editCropNameInput').value = '';
        document.getElementById('oldCropNameInput').value = decodedName;
        document.getElementById('editOptimalTemperature').value = '';
        document.getElementById('editOptimalHumidity').value = '';
        document.getElementById('editOptimalMoisture').value = '';
        document.getElementById('editOptimalLight').value = '';
        document.getElementById('editOptimalPH').value = '';
        document.getElementById('editOptimalN').value = '';
        document.getElementById('editOptimalP').value = '';
        document.getElementById('editOptimalK').value = '';
        // Store reference to the row for later update
        document.getElementById('editCropForm')._rowToUpdate = btn.closest('tr');
        // Fetch latest crop data
        fetch('/get-crop-details', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify({ cropName: decodedName })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                const crop = data.cropDetails;
                document.getElementById('editCropNameInput').value = crop.name || '';
                document.getElementById('editOptimalTemperature').value = crop.optimal_temperature ?? '';
                document.getElementById('editOptimalHumidity').value = crop.optimal_humidity ?? '';
                document.getElementById('editOptimalMoisture').value = crop.optimal_moisture ?? '';
                document.getElementById('editOptimalLight').value = crop.optimal_light ?? '';
                document.getElementById('editOptimalPH').value = crop.optimal_ph ?? '';
                document.getElementById('editOptimalN').value = crop.optimal_n ?? '';
                document.getElementById('editOptimalP').value = crop.optimal_p ?? '';
                document.getElementById('editOptimalK').value = crop.optimal_k ?? '';
                $('#editCropModal').modal('show');
            } else {
                showNotification('Failed to load crop data for editing: ' + (data.message || 'Unknown error'), 'danger');
            }
        })
        .catch(err => {
            showNotification('Error loading crop data: ' + err.message, 'danger');
        });
    }

    document.getElementById('editCropForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const oldCropName = document.getElementById('oldCropNameInput').value;
        const newCropName = document.getElementById('editCropNameInput').value;
        const optimal_temperature = document.getElementById('editOptimalTemperature').value;
        const optimal_humidity = document.getElementById('editOptimalHumidity').value;
        const optimal_moisture = document.getElementById('editOptimalMoisture').value;
        const optimal_light = document.getElementById('editOptimalLight').value;
        const optimal_ph = document.getElementById('editOptimalPH').value;
        const optimal_n = document.getElementById('editOptimalN').value;
        const optimal_p = document.getElementById('editOptimalP').value;
        const optimal_k = document.getElementById('editOptimalK').value;
        fetch('/edit-crop-name', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify({
                oldCropName,
                newCropName,
                optimal_temperature,
                optimal_humidity,
                optimal_moisture,
                optimal_light,
                optimal_ph,
                optimal_n,
                optimal_p,
                optimal_k
            })
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                const row = document.getElementById('editCropForm')._rowToUpdate;
                if (row) {
                    row.children[0].textContent = newCropName;
                    row.querySelector('.btn-outline-primary').setAttribute('onclick', `openEditModal('${encodeURIComponent(newCropName)}', this)`);
                    row.querySelector('.btn-outline-danger').setAttribute('onclick', `deleteCrop('${encodeURIComponent(newCropName)}')`);
                    // Optionally update data attributes for optimal values
                    row.setAttribute('data-optimal-temperature', optimal_temperature);
                    row.setAttribute('data-optimal-humidity', optimal_humidity);
                    row.setAttribute('data-optimal-moisture', optimal_moisture);
                    row.setAttribute('data-optimal-light', optimal_light);
                    row.setAttribute('data-optimal-ph', optimal_ph);
                    row.setAttribute('data-optimal-n', optimal_n);
                    row.setAttribute('data-optimal-p', optimal_p);
                    row.setAttribute('data-optimal-k', optimal_k);
                }
                $('#editCropModal').modal('hide');
                showNotification('Crop data updated successfully.', 'success');
            } else {
                showNotification('Failed to update crop data: ' + (data.message || 'Unknown error'), 'danger');
            }
        })
        .catch(err => {
            showNotification('Error: ' + err.message, 'danger');
        });
    });

    function showNotification(message, type = 'success', duration = 3500) {
        // type: 'success', 'danger', 'warning', 'info'
        const container = document.getElementById('notification-container');
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show shadow`;
        alertDiv.role = 'alert';
        alertDiv.innerHTML = `
            <span>${message}</span>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        `;
        container.appendChild(alertDiv);
        // Auto-dismiss
        setTimeout(() => {
            if (alertDiv.parentNode) {
                $(alertDiv).alert('close');
            }
        }, duration);
    }

    function openRegisterModal() {
        // Clear the form
        document.getElementById('registerCropForm').reset();
        $('#registerCropModal').modal('show');
    }

    // Handle crop registration form submission
    document.getElementById('registerCropForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const cropData = {
            cropName: formData.get('cropName'),
            optimal_temperature: formData.get('optimal_temperature') || null,
            optimal_humidity: formData.get('optimal_humidity') || null,
            optimal_moisture: formData.get('optimal_moisture') || null,
            optimal_light: formData.get('optimal_light') || null,
            optimal_ph: formData.get('optimal_ph') || null,
            optimal_n: formData.get('optimal_n') || null,
            optimal_p: formData.get('optimal_p') || null,
            optimal_k: formData.get('optimal_k') || null
        };

        // Show loading state
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = '<i class="fa fa-spinner fa-spin me-1"></i>Registering...';
        submitBtn.disabled = true;

        fetch('/register-crop-with-ai', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
            },
            body: JSON.stringify(cropData)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                showNotification('Crop registered successfully!', 'success');
                $('#registerCropModal').modal('hide');
                // Reload the page to show the new crop
                setTimeout(() => {
                    location.reload();
                }, 1500);
            } else {
                showNotification('Failed to register crop: ' + (data.message || 'Unknown error'), 'danger');
            }
        })
        .catch(err => {
            showNotification('Error: ' + err.message, 'danger');
        })
        .finally(() => {
            // Restore button state
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        });
    });
    </script>
</body>
</html>

