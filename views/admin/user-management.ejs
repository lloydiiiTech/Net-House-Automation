<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management - NetHouseAutomation</title>
    <!-- GLOBAL MAINLY STYLES-->
    <link href="./assets/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="./assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="./assets/vendors/themify-icons/css/themify-icons.css" rel="stylesheet" />
    <!-- PLUGINS STYLES-->
    <link href="./assets/vendors/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="./assets/vendors/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css" rel="stylesheet" />
    <!-- THEME STYLES-->
    <link href="assets/css/main.min.css" rel="stylesheet" />
    <!-- PAGE LEVEL STYLES-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .user-card {
            transition: all 0.3s ease;
        }
        .user-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .filter-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #e9ecef;
        }
        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #fff;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .action-buttons .btn {
            margin: 0 2px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }
        .action-buttons .btn:hover {
            transform: translateY(-2px);
        }
        .btn-view {
            background: linear-gradient(45deg, #17a2b8, #20c997);
            border: none;
            color: white;
        }
        .btn-view:hover {
            box-shadow: 0 4px 12px rgba(23, 162, 184, 0.3);
        }
        .btn-edit {
            background: linear-gradient(45deg, #ffc107, #fd7e14);
            border: none;
            color: white;
        }
        .btn-edit:hover {
            box-shadow: 0 4px 12px rgba(255, 193, 7, 0.3);
        }
        .btn-delete {
            background: linear-gradient(45deg, #dc3545, #e83e8c);
            border: none;
            color: white;
        }
        .btn-delete:hover {
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }
        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.75em;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .pagination {
            margin-top: 20px;
        }
        .search-box {
            position: relative;
        }
        .search-box i {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }
        .search-box input {
            padding-left: 35px;
            border-radius: 6px;
        }
        .table {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .table thead th {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
            border: none;
            padding: 15px 12px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85em;
            letter-spacing: 0.5px;
        }
        .table tbody tr {
            transition: all 0.3s ease;
        }
        .table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
        }
        .table tbody td {
            padding: 15px 12px;
            vertical-align: middle;
            border-top: 1px solid #e9ecef;
        }
        .user-info {
            display: flex;
            align-items: center;
        }
        .user-details {
            margin-left: 15px;
        }
        .user-name {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 2px;
        }
        .user-contact {
            color: #6c757d;
            font-size: 0.85em;
        }
        .role-select {
            border-radius: 6px;
            border: 1px solid #ced4da;
            padding: 6px 10px;
            font-size: 0.85em;
            transition: all 0.3s ease;
        }
        .role-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        .status-container {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        .toggle-btn {
            background: linear-gradient(45deg, #6c757d, #495057);
            border: none;
            color: white;
            border-radius: 6px;
            padding: 4px 8px;
            font-size: 0.75em;
            transition: all 0.3s ease;
        }
        .toggle-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3);
        }
        /* Pending Users Styles */
        .pending-users-btn {
            position: relative;
            padding: 8px 12px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }
        .pending-users-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .pending-users-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            min-width: 20px;
            height: 20px;
            border-radius: 10px;
            font-size: 0.7em;
            display: flex;
            align-items: center;
            justify-content: center;
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        .pending-user-card {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .pending-user-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            border-color: #007bff;
        }
        .pending-user-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #fff;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .pending-user-info {
            padding: 15px;
        }
        .pending-user-actions {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        .btn-approve {
            background: linear-gradient(45deg, #28a745, #20c997);
            border: none;
            color: white;
            transition: all 0.3s ease;
        }
        .btn-approve:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }
        .btn-reject {
            background: linear-gradient(45deg, #dc3545, #fd7e14);
            border: none;
            color: white;
            transition: all 0.3s ease;
        }
        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }
        .modal-header {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
            border-bottom: none;
        }
        .modal-header .close {
            color: white;
            opacity: 0.8;
        }
        .modal-header .close:hover {
            opacity: 1;
        }
        .no-pending-users {
            text-align: center;
            padding: 40px 20px;
            color: #6c757d;
        }
        .no-pending-users i {
            font-size: 3em;
            margin-bottom: 15px;
            opacity: 0.5;
        }
        /* Toast Notification Styles */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            padding: 15px 20px;
            border-radius: 6px;
            color: white;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideIn 0.3s ease-out;
            max-width: 300px;
        }
        .toast-success {
            background: linear-gradient(45deg, #28a745, #20c997);
        }
        .toast-error {
            background: linear-gradient(45deg, #dc3545, #e83e8c);
        }
        .toast-warning {
            background: linear-gradient(45deg, #ffc107, #fd7e14);
        }
        .toast-info {
            background: linear-gradient(45deg, #17a2b8, #20c997);
        }
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>

<body class="fixed-navbar">
    <div class="page-wrapper">
        <!-- START HEADER-->
        <header class="header">
            <div class="page-brand">
                <a class="link" href="/dashboard">
                    <span class="brand">AgriNet
                        <span class="brand-tip">Automation</span>
                    </span>
                    <span class="brand-mini"></span>
                </a>
            </div>
            <div class="flexbox flex-1">
                <ul class="nav navbar-toolbar">
                    <li>
                        <a class="nav-link sidebar-toggler js-sidebar-toggler"><i class="ti-menu"></i></a>
                    </li>
                </ul>
                <ul class="nav navbar-toolbar">
                    <li>
                        <a class="nav-link pending-users-btn" href="#" id="pendingUsersBtn" title="Pending Users">
                            <i class="fa fa-user-clock"></i>
                            <span class="badge badge-danger pending-users-badge" id="pendingUsersCount" style="display: none;">0</span>
                        </a>
                    </li>
                    <li class="dropdown dropdown-user">
                        <a class="nav-link dropdown-toggle link" data-toggle="dropdown">
                            <img src="<%= user.profilePicture || '/assets/img/admin-avatar.png' %>" />
                            <span></span><%= user.name %><i class="fa fa-angle-down m-l-5"></i></a>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="/profile"><i class="fa fa-user"></i>Profile</a>
                            <li class="dropdown-divider"></li>
                            <a class="dropdown-item" href="/logout"><i class="fa fa-power-off"></i>Logout</a>
                        </ul>
                    </li>
                </ul>
            </div>
        </header>
        <!-- END HEADER-->
        <!-- START SIDEBAR-->
        <nav class="page-sidebar" id="sidebar">
            <div id="sidebar-collapse">
                <div class="admin-block d-flex">
                    <div>
                        <img src="<%= user.profilePicture || './assets/img/admin-avatar.png' %>" width="45px" />
                    </div>
                    <div class="admin-info">
                        <div class="font-strong"><%= user.name %></div><small><%= user.role %></small>
                    </div>
                </div>
                <ul class="side-menu metismenu">
                    <li>
                        <a href="/dashboard"><i class="sidebar-item-icon fas fa-tachometer-alt"></i>
                            <span class="nav-label">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/plant-overview"><i class="sidebar-item-icon fas fa-leaf"></i>
                            <span class="nav-label">Plant Overview</span>
                        </a>
                    </li>
                    <li>
                        <a href="/irrigation-controll"><i class="sidebar-item-icon fas fa-faucet"></i>
                            <span class="nav-label">Irrigation Control</span>
                        </a>
                    </li>
                    <li>
                        <a href="/reports&analytics"><i class="sidebar-item-icon fas fa-chart-bar"></i>
                            <span class="nav-label">Reports & Analytics</span>
                        </a>
                    </li>
                    <li>
                        <a href="/user-management"><i class="sidebar-item-icon fas fa-users-cog"></i>
                            <span class="nav-label">User Management</span>
                        </a>
                    </li>
                    <li>
                        <a class="active" href="/crop-recommendations"><i class="sidebar-item-icon fas fa-seedling"></i>
                            <span class="nav-label">Crop Recommendations</span>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <!-- END SIDEBAR-->
        <div class="content-wrapper">
            <div class="page-heading">
                <h1 class="page-title">User Management</h1>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/dashboard"><i class="fa fa-home font-20"></i></a>
                    </li>
                    <li class="breadcrumb-item">User Management</li>
                </ol>
            </div>
            <div class="page-content fade-in-up">
                <!-- Filter Section -->
                <div class="filter-section">
                    <form id="filterForm" class="row">
                        <div class="col-md-3">
                            <div class="search-box">
                                <i class="fa fa-search"></i>
                                <input type="text" class="form-control" name="search" placeholder="Search users..." value="<%= filters.search %>">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <select class="form-control" name="role">
                                <option value="">All Roles</option>
                                <option value="Admin" <%= filters.role === 'Admin' ? 'selected' : '' %>>Admin</option>
                                <option value="User" <%= filters.role === 'User' ? 'selected' : '' %>>User</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select class="form-control" name="verified">
                                <option value="">Verification Status</option>
                                <option value="true" <%= filters.verified === 'true' ? 'selected' : '' %>>Verified</option>
                                <option value="false" <%= filters.verified === 'false' ? 'selected' : '' %>>Not Verified</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select class="form-control" name="status">
                                <option value="">Account Status</option>
                                <option value="Active" <%= filters.status === 'Active' ? 'selected' : '' %>>Active</option>
                                <option value="Deactivated" <%= filters.status === 'Deactivated' ? 'selected' : '' %>>Deactivated</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-primary">Apply Filters</button>
                            <button type="button" class="btn btn-secondary" onclick="resetFilters()">Reset</button>
                        </div>
                    </form>
                </div>

                <!-- Users Table -->
            <div class="ibox">
                <div class="ibox-head">
                    <div class="ibox-title">User List</div>
                </div>
                <div class="ibox-body">
                    <div class="table-responsive">
                            <table class="table table-hover">
                            <thead>
                                <tr>
                                        <th>User</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                        <th>Email Verification</th>
                                        <th>Status</th>
                                        <th>Last Login</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% users.forEach(user => { %>
                                    <tr>
                                            <td>
                                                <div class="user-info">
                                                    <img src="<%= user.profilePicture || './assets/img/admin-avatar.png' %>" class="user-avatar" alt="<%= user.name %>">
                                                    <div class="user-details">
                                                        <div class="user-name"><%= user.name %></div>
                                                        <div class="user-contact"><%= user.contactNumber %></div>
                                                    </div>
                                                </div>
                                            </td>
                                        <td><%= user.email %></td>
                                        <td>
                                                <select class="form-control form-control-sm role-select" data-user-id="<%= user.id %>">
                                                <option value="User" <%= user.role === 'User' ? 'selected' : '' %>>User</option>
                                                <option value="Admin" <%= user.role === 'Admin' ? 'selected' : '' %>>Admin</option>
                                            </select>
                                        </td>
                                        <td>
                                                <span class="status-badge <%= user.isVerified ? 'badge-success' : 'badge-warning' %>">
                                                <%= user.isVerified ? 'Verified' : 'Not Verified' %>
                                            </span>
                                        </td>
                                        <td>
                                                <div class="status-container">
                                                    <span class="status-badge <%= user.status === 'Active' ? 'badge-success' : 'badge-danger' %>">
                                                        <%= user.status %>
                                            </span>
                                                    <button class="btn btn-sm toggle-btn toggle-status" data-user-id="<%= user.id %>" title="Toggle Status">
                                                        <i class="fa <%= user.status === 'Active' ? 'fa-lock' : 'fa-unlock' %>"></i>
                                            </button>
                                                </div>
                                        </td>
                                            <td><%= user.lastLogin %></td>
                                            <td class="action-buttons">
                                                <button class="btn btn-sm btn-view" onclick="viewUserDetails('<%= user.id %>')" title="View Details">
                                                    <i class="fa fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-edit" onclick="editUser('<%= user.id %>')" title="Edit User">
                                                    <i class="fa fa-pencil"></i>
                                            </button>
                                                <button class="btn btn-sm btn-delete" onclick="deleteUser('<%= user.id %>')" title="Delete User">
                                                    <i class="fa fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                        </div>

                        <!-- Pagination -->
                        <% if (pagination.totalPages > 1) { %>
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item <%= !pagination.hasPrevPage ? 'disabled' : '' %>">
                                        <a class="page-link" href="?page=<%= pagination.page - 1 %>&<%= new URLSearchParams(filters).toString() %>">Previous</a>
                                    </li>
                                    <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                                        <li class="page-item <%= pagination.page === i ? 'active' : '' %>">
                                            <a class="page-link" href="?page=<%= i %>&<%= new URLSearchParams(filters).toString() %>"><%= i %></a>
                                        </li>
                                    <% } %>
                                    <li class="page-item <%= !pagination.hasNextPage ? 'disabled' : '' %>">
                                        <a class="page-link" href="?page=<%= pagination.page + 1 %>&<%= new URLSearchParams(filters).toString() %>">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        <footer class="page-footer">
            <div class="font-13">2025 © <b>NetHouseAutomation</b> - All rights reserved.</div>
            <div class="to-top"><i class="fa fa-angle-double-up"></i></div>
        </footer>
    </div>

    <!-- User Details Modal -->
    <div class="modal fade" id="userDetailsModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">User Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4 text-center">
                            <img id="modalUserAvatar" src="" class="img-fluid rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">
                        </div>
                        <div class="col-md-8">
                            <h4 id="modalUserName"></h4>
                            <p id="modalUserEmail" class="text-muted"></p>
                            <div class="row mt-4">
                                <div class="col-md-6">
                                    <p><strong>Role:</strong> <span id="modalUserRole"></span></p>
                                    <p><strong>Contact:</strong> <span id="modalUserContact"></span></p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong>Created:</strong> <span id="modalUserCreated"></span></p>
                                    <p><strong>Last Login:</strong> <span id="modalUserLastLogin"></span></p>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <p><strong>Email Verification:</strong> <span id="modalUserVerified"></span></p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong>Account Status:</strong> <span id="modalUserStatus"></span></p>
                </div>
                </div>
                </div>
                </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fa fa-pencil mr-2"></i>
                        Edit User
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editUserForm">
                        <input type="hidden" id="editUserId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserName">Name</label>
                                    <input type="text" class="form-control" id="editUserName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserEmail">Email</label>
                                    <input type="email" class="form-control" id="editUserEmail" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserContact">Contact Number</label>
                                    <input type="text" class="form-control" id="editUserContact">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserRole">Role</label>
                                    <select class="form-control" id="editUserRole" required>
                                        <option value="User">User</option>
                                        <option value="Admin">Admin</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserStatus">Status</label>
                                    <select class="form-control" id="editUserStatus" required>
                                        <option value="Active">Active</option>
                                        <option value="Deactivated">Deactivated</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editUserVerified">Email Verification</label>
                                    <select class="form-control" id="editUserVerified" required>
                                        <option value="true">Verified</option>
                                        <option value="false">Not Verified</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveUserChanges()">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Users Modal -->
    <div class="modal fade" id="pendingUsersModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fa fa-user-clock mr-2"></i>
                        Pending Users
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="pendingUsersList">
                        <!-- Pending users will be loaded here -->
                </div>
                </div>
            </div>
        </div>
    </div>

    <!-- CORE PLUGINS-->
    <script src="./assets/vendors/jquery/dist/jquery.min.js" type="text/javascript"></script>
    <script src="./assets/vendors/popper.js/dist/umd/popper.min.js" type="text/javascript"></script>
    <script src="./assets/vendors/bootstrap/dist/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="./assets/vendors/metisMenu/dist/metisMenu.min.js" type="text/javascript"></script>
    <script src="./assets/vendors/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
    <!-- CORE SCRIPTS-->
    <script src="assets/js/app.min.js" type="text/javascript"></script>

    <script>
    // Global functions for user management
    async function viewUserDetails(userId) {
        try {
            const response = await fetch(`/api/users/${userId}`);
            const data = await response.json();
            
            if (data.success) {
                const user = data.user;
                document.getElementById('modalUserAvatar').src = user.profilePicture || './assets/img/admin-avatar.png';
                document.getElementById('modalUserName').textContent = user.name;
                document.getElementById('modalUserEmail').textContent = user.email;
                document.getElementById('modalUserRole').textContent = user.Role || 'User';
                document.getElementById('modalUserContact').textContent = user.contactNumber || 'N/A';
                document.getElementById('modalUserCreated').textContent = user.createdAt ? new Date(user.createdAt).toLocaleString() : 'N/A';
                document.getElementById('modalUserLastLogin').textContent = user.lastLogin ? new Date(user.lastLogin).toLocaleString() : 'Never';
                document.getElementById('modalUserVerified').textContent = user.isVerified ? 'Verified' : 'Not Verified';
                document.getElementById('modalUserStatus').textContent = user.Status || 'Deactivated';
                
                $('#userDetailsModal').modal('show');
            } else {
                showNotification('error', 'Error fetching user details');
            }
        } catch (error) {
            console.error('Error:', error);
            showNotification('error', 'Error fetching user details');
        }
    }

    async function editUser(userId) {
        try {
            const response = await fetch(`/api/users/${userId}`);
            const data = await response.json();
            
            if (data.success) {
                const user = data.user;
                document.getElementById('editUserId').value = user.id;
                document.getElementById('editUserName').value = user.name || '';
                document.getElementById('editUserEmail').value = user.email || '';
                document.getElementById('editUserContact').value = user.contactNumber || '';
                document.getElementById('editUserRole').value = user.Role || 'User';
                document.getElementById('editUserStatus').value = user.Status || 'Deactivated';
                document.getElementById('editUserVerified').value = user.isVerified ? 'true' : 'false';
                
                $('#editUserModal').modal('show');
            } else {
                showNotification('error', 'Error fetching user details');
            }
        } catch (error) {
            console.error('Error:', error);
            showNotification('error', 'Error fetching user details');
        }
    }

    async function saveUserChanges() {
        const userId = document.getElementById('editUserId').value;
        const userData = {
            name: document.getElementById('editUserName').value,
            email: document.getElementById('editUserEmail').value,
            contactNumber: document.getElementById('editUserContact').value,
            Role: document.getElementById('editUserRole').value,
            Status: document.getElementById('editUserStatus').value,
            isVerified: document.getElementById('editUserVerified').value === 'true'
        };

        try {
            const response = await fetch(`/api/users/${userId}/update`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userData)
            });
            
            const data = await response.json();
            if (data.success) {
                showNotification('success', 'User updated successfully');
                $('#editUserModal').modal('hide');
                location.reload(); // Refresh the page to show updated data
            } else {
                showNotification('error', 'Error updating user');
            }
        } catch (error) {
            console.error('Error:', error);
            showNotification('error', 'Error updating user');
        }
    }

    async function deleteUser(userId) {
        if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
            try {
                const response = await fetch(`/api/users/${userId}`, {
                    method: 'DELETE'
                });
                
                const data = await response.json();
                if (data.success) {
                    showNotification('success', 'User deleted successfully');
                    location.reload();
                } else {
                    showNotification('error', 'Error deleting user');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification('error', 'Error deleting user');
            }
        }
    }

    function resetFilters() {
        window.location.href = '/user-management';
    }

    function showNotification(type, message) {
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.innerHTML = message;
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.remove();
        }, 3000);
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Load pending users count
        loadPendingUsersCount();

        // Handle pending users button click
        document.getElementById('pendingUsersBtn').addEventListener('click', function(e) {
            e.preventDefault();
            loadPendingUsers();
            $('#pendingUsersModal').modal('show');
        });

        // Function to load pending users count
        async function loadPendingUsersCount() {
            try {
                const response = await fetch('/api/users/pending/count');
                const data = await response.json();
                if (data.success) {
                    const countBadge = document.getElementById('pendingUsersCount');
                    if (data.count > 0) {
                        countBadge.textContent = data.count;
                        countBadge.style.display = 'flex';
                    } else {
                        countBadge.style.display = 'none';
                    }
                }
            } catch (error) {
                console.error('Error loading pending users count:', error);
            }
        }

        // Function to load pending users
        async function loadPendingUsers() {
            try {
                const response = await fetch('/api/users/pending');
                const data = await response.json();

                if (data.success) {
                    const pendingUsersList = document.getElementById('pendingUsersList');
                    pendingUsersList.innerHTML = '';

                    if (!data.users || data.users.length === 0) {
                        pendingUsersList.innerHTML = `
                            <div class="no-pending-users">
                                <i class="fa fa-user-clock"></i>
                                <h5>No Pending Users</h5>
                                <p>All users have been processed.</p>
                            </div>
                        `;
                        return;
                    }

                    data.users.forEach(user => {
                        const userCard = document.createElement('div');
                        userCard.className = 'card pending-user-card mb-3';
                        userCard.innerHTML = `
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-md-2 text-center">
                                        <img src="${user.profilePicture || './assets/img/admin-avatar.png'}" 
                                             class="pending-user-avatar" 
                                             alt="${user.name}">
                                    </div>
                                    <div class="col-md-7 pending-user-info">
                                        <h5 class="card-title mb-2">${user.name}</h5>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p class="mb-1"><strong>Email:</strong> ${user.email}</p>
                                                <p class="mb-1"><strong>Contact:</strong> ${user.contactNumber || 'N/A'}</p>
                                                <p class="mb-1"><strong>Role:</strong> ${user.role}</p>
                                            </div>
                                            <div class="col-md-6">
                                                <p class="mb-1"><strong>Verification:</strong> 
                                                    <span class="badge ${user.isVerified ? 'badge-success' : 'badge-warning'}">
                                                        ${user.isVerified ? 'Verified' : 'Not Verified'}
                                                    </span>
                                                </p>
                                                <p class="mb-1"><strong>Registered:</strong> ${user.createdAt}</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3 pending-user-actions">
                                        <button class="btn btn-approve btn-sm w-100 mb-2 approve-user" 
                                                data-user-id="${user.id}">
                                            <i class="fa fa-check mr-1"></i> Approve
                                        </button>
                                        <button class="btn btn-reject btn-sm w-100 reject-user" 
                                                data-user-id="${user.id}">
                                            <i class="fa fa-times mr-1"></i> Reject
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `;
                        pendingUsersList.appendChild(userCard);
                    });

                    // Add event listeners for approve/reject buttons
                    document.querySelectorAll('.approve-user').forEach(button => {
                        button.addEventListener('click', handleUserApproval);
                    });
                    document.querySelectorAll('.reject-user').forEach(button => {
                        button.addEventListener('click', handleUserRejection);
                    });
                } else {
                    const pendingUsersList = document.getElementById('pendingUsersList');
                    pendingUsersList.innerHTML = `
                        <div class="alert alert-danger">
                            <i class="fa fa-exclamation-triangle mr-2"></i>
                            Error: ${data.message}
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading pending users:', error);
                const pendingUsersList = document.getElementById('pendingUsersList');
                pendingUsersList.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fa fa-exclamation-triangle mr-2"></i>
                        Failed to load pending users: ${error.message}
                    </div>
                `;
            }
        }

        // Handle user approval
        async function handleUserApproval(e) {
            const userId = e.target.closest('button').dataset.userId;
            try {
                const response = await fetch(`/api/users/${userId}/approve`, {
                    method: 'PUT'
                });
                const data = await response.json();
                if (data.success) {
                    showNotification('success', 'User approved successfully');
                    loadPendingUsers();
                    loadPendingUsersCount();
                    location.reload(); // Refresh the page to update the user list
                } else {
                    showNotification('error', 'Error approving user');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification('error', 'Error approving user');
            }
        }

        // Handle user rejection
        async function handleUserRejection(e) {
            const userId = e.target.closest('button').dataset.userId;
            try {
                const response = await fetch(`/api/users/${userId}/reject`, {
                    method: 'PUT'
                });
                const data = await response.json();
                if (data.success) {
                    showNotification('success', 'User rejected successfully');
                    loadPendingUsers();
                    loadPendingUsersCount();
                    location.reload(); // Refresh the page to update the user list
                } else {
                    showNotification('error', 'Error rejecting user');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification('error', 'Error rejecting user');
            }
        }

        // Handle role changes
        document.querySelectorAll('.role-select').forEach(select => {
            select.addEventListener('change', async function() {
                const userId = this.dataset.userId;
                const newRole = this.value;
                
                try {
                    const response = await fetch(`/api/users/${userId}/role`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ role: newRole })
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        showNotification('success', 'User role updated successfully');
                    } else {
                        showNotification('error', 'Error updating user role');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showNotification('error', 'Error updating user role');
                }
            });
        });

        // Handle verification toggle
        document.querySelectorAll('.toggle-verify').forEach(button => {
            button.addEventListener('click', async function() {
                const userId = this.dataset.userId;
                
                try {
                    const response = await fetch(`/api/users/${userId}/verify`, {
                        method: 'PUT'
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        location.reload();
                    } else {
                        showNotification('error', 'Error updating verification status');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showNotification('error', 'Error updating verification status');
                }
            });
        });

        // Handle status toggle
        document.querySelectorAll('.toggle-status').forEach(button => {
            button.addEventListener('click', async function() {
                const userId = this.dataset.userId;
                
                try {
                    const response = await fetch(`/api/users/${userId}/status`, {
                        method: 'PUT'
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        location.reload();
                    } else {
                        showNotification('error', 'Error updating user status');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showNotification('error', 'Error updating user status');
                }
            });
        });
    });
    </script>
</body>

</html>