<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - Demo Farm Net House Automation</title>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@700&family=Roboto:wght@400;500&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }

        body {
            background-color: #1f6637;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            width: 100vw;
            padding: 20px;
        }

        .login-container {
            display: flex;
            width: 90%;
            max-width: 1200px;
            border-radius: 15px;
            overflow: hidden;
            background: #ffffff;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
            height: 90%;
            max-height: 100vh;
        }

        .left-column {
            flex: 1;
            background: url('images/Farm.jpg') center/cover no-repeat;
            position: relative;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            color: white;
            text-align: center;
        }

        .left-column::before {
            content: "";
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.6);
        }

        .left-column h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            z-index: 1;
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.7);
        }

        .nav-links {
            display: flex;
            gap: 15px;
            z-index: 1;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            font-size: 1.2rem;
            padding: 10px 20px;
            border-radius: 25px;
            border: 2px solid white;
            transition: background 0.3s, color 0.3s;
        }

        .nav-links a:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .right-column {
            flex: 1.2;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 40px;
        }

        .logo {
            width: 120px;
            border-radius: 50%;
            margin-bottom: 15px;
        }

        form {
            width: 100%;
            max-width: 500px;
            height: 100%;
            display: flex;
            flex-direction: column;
            background: #f9f9f9;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .register-title {
            color: #1f6637;
            font-family: "Oswald", sans-serif;
            font-size: 2rem;
            text-align: center;
            margin-bottom: 20px;
        }

        label {
            font-weight: 500;
            margin-bottom: 5px;
        }

        input[type="text"],
        input[type="tel"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 12px;
            margin-bottom: 15px;
            border: 2px solid #1f6637;
            border-radius: 8px;
            outline: none;
            font-size: 1rem;
            transition: all 0.3s;
        }

        input[type="text"]:focus,
        input[type="tel"]:focus,
        input[type="email"]:focus,
        input[type="password"]:focus {
            border-color: #0c702d;
            box-shadow: 0 0 5px rgba(12, 112, 45, 0.4);
        }

        .form-actions {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            margin-top: 10px;
        }

        .register-btn {
            background-color: #0c702d;
            color: white;
            padding: 12px;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-weight: 700;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 15px;
        }

        .register-btn:hover {
            background-color: #1f6637;
            transform: scale(1.05);
        }

        .link {
            color: #1f6637;
            font-weight: 500;
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s;
            text-align: center;
            margin-top: 10px;
        }

        .link:hover {
            color: #0c702d;
        }

        .message {
            margin-top: 10px;
            text-align: center;
            font-weight: bold;
        }

        .error {
            color: red;
        }

        .success {
            color: green;
        }

        @media (max-width: 900px) {
            .login-container {
                flex-direction: column;
                height: auto;
            }

            .left-column {
                width: 100%;
                height: 200px;
                padding: 20px;
            }

            .right-column {
                padding: 30px;
            }

            .left-column h2 {
                font-size: 2rem; /* Adjust font size for smaller screens */
            }

            .nav-links a {
                font-size: 1rem; /* Adjust font size for smaller screens */
            }

            .form-title {
                font-size: 1.5rem; /* Adjust font size for smaller screens */
            }

            .login-btn {
                font-size: 0.9rem; /* Adjust button font size for smaller screens */
            }

            .link {
                font-size: 0.8rem; /* Adjust link font size for smaller screens */
            }
        }

        #password, #confirm-password{
            margin-bottom: 0;
        }
        #password-requirements, #password-match {
            margin: 5px;
        }

        #password-requirements p, #password-match {
            margin: 0;
            font-size: 14px;
        }

        .valid {
            color: green;
        }

        .invalid {
            color: red;
        }

        .right-column {
            flex: 1.2;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 40px;
            position: relative; /* Set position to relative for absolute positioning of notification */
        }
        .notification {
            position: absolute;
            width: 80%;
            left: 50%;
            top: 20%;
            transform: translateX(-50%);
            padding: 15px;
            font-size: 14px;
            text-align: center;
            border-radius: 8px;
            font-weight: bold;
            display: none; /* Initially hidden */
            z-index: 100;
            opacity: 0; /* Start fully transparent */
            transition: opacity 0.5s ease-in-out; /* Smooth fade effect */
        }

        .notification.success {
            background-color: #4CAF50;
            color: white;
            border: 1px solid #3e8e41;
        }

        .notification.error {
            background-color: #f44336;
            color: white;
            border: 1px solid #d32f2f;
        }


        
    </style>
</head>
<body>
    <div class="login-container">
        <div class="left-column">
            <h2>Demo Farm Net House Automation</h2>
            <div class="nav-links">
                <a href="/login">Login</a>
                <a href="#" class="active">Register</a>
            </div>
        </div>
        <div class="right-column">
            <form id="registerForm" action="/register" method="post">
                <h1 class="register-title">REGISTER</h1>
                <div id="notification" class="notification"
                    style="<%= Data && (Data.error || Data.success) ? 'display: block;' : 'display: none;' %>">
                </div>

                
               
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" placeholder="Enter your full name" required value="<%= typeof Data !== 'undefined' ? Data.name : '' %>">

                <label for="contactNumber">Contact Number:</label>
                <input type="text" id="contactNumber" name="contactNumber" placeholder="Enter your contact number" required value="<%= typeof Data !== 'undefined' ? Data.contactNumber : '' %>">

                
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email" required value="<%= typeof Data !== 'undefined' ? Data.email : '' %>">

                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Create a password" required>

                <div id="password-requirements">
                    <p id="length" class="invalid">✖ At least 8 characters</p>
                    <p id="letter" class="invalid">✖ Contains uppercase and lowercase letters</p>
                    <p id="number" class="invalid">✖ Contains at least one number</p>
                </div>

                <label for="confirm-password">Confirm Password:</label>
                <input type="password" id="confirm-password" name="confirm-password" placeholder="Re-enter your password" required disabled>
                <p id="password-match" class="invalid">✖ Passwords do not match</p>

                <button type="submit" class="register-btn">REGISTER</button>
            </form>
        </div>
    </div>

    <script>
 function showNotification(message, isSuccess) {
    const notification = document.getElementById('notification');

    if (!notification) {
        console.error('Notification element not found in the DOM.');
        return;
    }

    // Set message and class
    notification.textContent = message;
    notification.className = 'notification ' + (isSuccess ? 'success' : 'error');

    // Make visible first
    notification.style.display = 'block';

    // Force reflow before applying opacity
    setTimeout(() => {
        notification.style.opacity = '1';
    }, 10); // Small delay to ensure transition works

    // Fade out after 3 seconds
    setTimeout(() => {
        notification.style.opacity = '0'; // Start fade-out
    }, 3000);

    // Hide after fade-out completes
    setTimeout(() => {
        notification.style.display = 'none';
    }, 3500);
}



document.addEventListener("DOMContentLoaded", () => {
    // Retrieve message from server-side EJS variables
    const message = "<%= Data && (Data.error || Data.success) ? (Data.error || Data.success) : '' %>";
    const isSuccess = <%= Data && Data.success ? 'true' : 'false' %>;

    if (message.trim() !== '') {
        showNotification(message, isSuccess);
    }
});

 



        // Password validation logic
        const passwordField = document.getElementById("password");
        const confirmPasswordField = document.getElementById("confirm-password");
        const passwordMatchText = document.getElementById("password-match");

        passwordField.addEventListener("input", validatePassword);
        confirmPasswordField.addEventListener("input", checkPasswordMatch);

        function validatePassword() {
            const password = passwordField.value;
            const lengthCheck = password.length >= 8;
            const letterCheck = /[a-z]/.test(password) && /[A-Z]/.test(password);
            const numberCheck = /\d/.test(password);

            updateRequirement("length", lengthCheck);
            updateRequirement("letter", letterCheck);
            updateRequirement("number", numberCheck);

            confirmPasswordField.disabled = !(lengthCheck && letterCheck && numberCheck);
            checkPasswordMatch();
        }

        function updateRequirement(id, condition) {
            const element = document.getElementById(id);
            if (condition) {
                element.className = "valid";
                element.innerText = element.innerText.replace("✖", "✔");
            } else {
                element.className = "invalid";
                element.innerText = element.innerText.replace("✔", "✖");
            }
        }

        function checkPasswordMatch() {
            const password = passwordField.value;
            const confirmPassword = confirmPasswordField.value;

            if (password && confirmPassword) {
                if (password === confirmPassword) {
                    passwordMatchText.className = "valid";
                    passwordMatchText.innerText = "✔ Passwords match";
                } else {
                    passwordMatchText.className = "invalid";
                    passwordMatchText.innerText = "✖ Passwords do not match";
                }
            } else {
                passwordMatchText.className = "invalid";
                passwordMatchText.innerText = "✖ Passwords do not match";
            }
        }

        document.getElementById("registerForm").addEventListener("submit", function(event) {
            if (passwordField.value !== confirmPasswordField.value) {
                showNotification("error", "Passwords do not match.");
                event.preventDefault();
            }
        });

    </script>

</body>


</html>